깃
형상관리툴 이라고도 하며 일본어로는 분산형관리툴이라고도 한다.
개발현장에서 많이 사용됨

<면접팁>
질문1. 깃은 사용해 보셨나요
포크를 따온 후 자신이 담당할 브런치를 깃 패치에서 확인 후
깃 풀 오리진을 사용 해 자신의 작업저장소에서 작업 후
깃 에드 커밋 푸쉬 등을 사용해 인덱스 로컬저장소 원격저장소에
저장하며 작업을 공유 수정 해본 경험이 있습니다.
그리고 CLI만이 아닌 GUI방식도 사용해 본 적이 있습니다. 

질문2. SVN은 사용해보셨나요
사용한 적은 없지만 깃 사용법을 알고 있기 때문에 충분히 익히고
따라갈 수 있을 것이라 생각합니다.

질문3. 포크 사용해보신 적 있습니까
포크를 따서 업스트림과 오리진 등으로 원본과 복사본을 구분해 작업 후
pull request를 통해 원본에 반영을 요청했고 marge pull request처리를
받아 작업을 완료하였다.

질문4. 일본에 왜 왔는가
장기적으로 있겠다는 대답이 되어야함.
고등학생때 고등학교 졸업 후 부모님으로부터 독립할 계획을 갖고 있었다.
하지만 당시 한국에서 아르바이트 시급은 500엔이 되지 않았기에 호주나
일본과 같은 나라를 알아보았고 문화적으로도 친숙한 일본에서의 유학을 결심
하게되었다.
이 후 대학교까지 졸업하고 결혼까지 하게되어 앞으로도 쭉 일본에서 일을 해
나아갈 계획이며 영주권이나 귀화까지도 생각하고 있다.


질문5. 곤란할 시 어떻게 해결하는가
일단은 개인적으로 해결방안들을 찾아보고 확인한 후 최종적으로 상사에게
보고를 하여 해결방안에 수정할 부분이 있다면 수정한 후 수정을 한다.

<수업내용>
깃 = 소프트웨어
깃 허브 = 깃을 저장하는 저장공간 다른 것들도 많다.

CLI GUI
CLI는 도스방식
GUI는 윈도우방식

깃 허브 = 원격저장소
내 PC = 로컬저장소
임시저장공간 = 인덱스
작업공간 = 작업저장소

원격저장소에 다운 받으면 로컬저장소에 다운이 되고
작업저장소에서 편집등을 한 후 인덱스에 올리고 로컬저장소에올린 후
최종적으로는 원격저장소에 올리는 방식

포크작업
내아이디를 관리자에게 알려줌 → 관리자로부터 초대메일 도착
→오른쪽 상단에 fork 클릭 → 상대의 레포지트가 내레포지트에 복사됨
→복사된 레포지트에서 클론 생성 → 클론으로 작업등을 한 후 포크에 푸쉬
(git clone 포크된 주소) → 최종적으로 관리자에게 원본반영신청

작업흐름으로는

작업할 폴더를 만들고
git init

연동
포크본 - git remote add origin 주소
원 본 - git remote add upstream 주소
로 원본과 포크본을 구별해 연동시킴

git pull origin 브런치명
git checkout 브런치명

원본쪽에 최신버전 갱신 되었을 경우

바로 pull로 당겨오지 말 것!
git fetch를 통해 내용만 일단 확인

git rebase upstream/브런치명
으로 당겨온다.
pull로 당겨오면 충돌이 일어나기 쉬움 (병합적개념)
rebase는 갈아끼는 개념이기에 충돌확률이 적음


<깃 명령어>

git --version
깃 버전확인

git config --list
유저명이나 메일 확인

git config --global user.name "CCPAPA"
유저명 등록

git config --global user.email "yaskanchapa@yahoo.co.jp"
메일 등록

git init
작업저장소등록

git remote add orizin 주소
로컬 저장소와 원격 저장소 연결

git fetch
쭉 훑어보기만 가능

git checkout -b 브런치명
브런치 생성

git pull origin 브런치명
해당 브런치 데이터 작업저장소로 다운로드
주의 : 브런치명을 변경할 때 내 작업저장소에 덮어써져 버리기 때문에
작업중인 파일은 백업 필수

git branch -a
브런치 리스트 확인
빨강 - 아직 반영 안된 것들(작업저장소에 다운 안된 것들)

git checkout 브런치명
브런치 이동

git fetch
git rebase upstream/브런치명 (갱신이루어진곳)
내 저장소로 원본에 갱신된 것이 반영됨

git push origin 브런치명
포크에다가 갱신된 것 다시 쏴줘야됨

git remote -v
연결된 원격저장소 주소확인

git remote rm origin
원격 저장소 리스트 삭제
원격저장소 연결을 바꾸고 싶을시엔 삭제 후 재연결 해야함

git status
변경 내용 확인
빨강 - 로컬저장소와 작업저장소 내용 불일치
초록 - 로컬저장소와 작업저장소 내용 일치

git add *
git add 파일명
인덱스에 올림

git commit -m ""
작업저장소 -> 로컬저장소로 메세지 입력해 올림

git push origin master
로컬저장소 -> 원격저장소로


<팁>
해당 폴더 주소에 cmd 입력시 해당폴더 경로에서 cmd 열림

한번 이닛 해둔 폴더는 경로 변경시켜도 따로 다시 이닛 할 필요 없음


 