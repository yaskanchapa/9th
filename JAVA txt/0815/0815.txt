<복습>

●타입
String 문자열 :첫글자 대문자 주의

int : 정수 

boolean : 참/거짓 동사형태로 이름지음


●변수
카   멜:FirstName 보통 많이사용함
스네이크:first_name

도중에 언제든 값변경 가능
int num;
num = 10;

더하기 기능 주의
num = num + i;
같은 뜻
num += i;

=의 의미
우황의 값을 좌황에 넣는다는 느낌
+의 의미
산술적 의미많이 아닌 이어 붙인다는 의미
제일 앞이 문자열로 처리했다면 뒤에 +도 
산술적의미가 아닌 이어붙이기로 사용됨
()를 사용하면 산술적의미와 붙이기 의미 나눠사용 가능

지역변수 (로컬변수)
해당 지역에서만 사용되는 변수
전역변수 (글로벌변수)
클래스 내 에서 사용 되는 변수

변수는 기본적으로 지정된 {}안에서 살아있는다.

●반복문
for(조건){
 조건이 참일시 실행되는 구문
}

조건 = int i = 0; i < 10; i++

int i = 0; -> 시작점 이 0
i < 10; -> 끝 점
이 후 처리문 실행되고나서
i++이됨    
※;는 안붙으니 주의!

while(조건){
실행되는 구문
}
조건 = 끝점 밖에 지정이 안됨

그러기 때문에 실행구문안에 증감식 처리를 해야됨

●조건문
if 코딩은 편한데 가독성 나쁨

if(조건){
조건이 참이면 실행할 구문
}
예문)
		if(name == "김태환") {
			System.out.println("33살입니다.");
		}
		else if(name == "김정화") {
			System.out.println("37살입니다.");
		}
		else {
			System.out.println("모릅니다.");
		}

※else if와 if 차이
시험성적을 예로설명

switch 코딩은 불편 가독성 편함
조건이 많을 시에는 switch문을 쓰는게 편함.

//변수season이랑 case랑 비교해서 맞으면 출력 break 안잊도록 :란 것도 주의
//default가 else같은 의미 예외를 다 처리하는 구문 이경우 break안쓰는거 주의
//case에는 부등호 즉 범위지정이 안된다. 즉 부등호로 조건문만들땐 if문 사용
//스위치의 경우 만족해도 밑으로 계속 읽고 실행하기에 브레이크를 걸어줘야 함.
//혹시 return이 사용된다면 거기서 종료 시키기 떄문에 break 사용 할 필요 없다.
//continue : 건너 뛰는 처리 예로 숫자가 5라면 이건 건너 뛴다는 처리를 함
	switch(season) {
		case "spring" :
			System.out.println("봄입니다.");
			break; <- 이 조건 맞으면 강제 종료 시키기 위해
		case "summer" :
			System.out.println("여름입니다.");
			break;
		case "fall" :
			System.out.println("가을입니다.");
			break;
		case "winter" :
			System.out.println("겨울입니다.");
			break;
		default:
			System.out.println("잘못된 입력입니다.");
		}
●누적값
sum = sum + 1;
sum += 1;

●비교구문
/*
== : 같다
!= : 다르다
+= : 더한후 값에 넣는다.
-=: 뺀후 값에 넣는다.

★★글자 비교할 때 는
대상.equals()로사용하는걸 추천
==경우는 저장되는 메모리 값이 다를경우 동일한 문자라 하여도 
다른 값으로 처리 하기 때문에
대상에는 null값은 올 수가 없다. null값과 비교하려면 
null대상을 ()에 넣고 비교한다.
*/

★★●추가판별
&& = and
|| = or 버티컬 바

★★●삼항연산자
if랑 else만 사용된 코드를 한줄로 만든경우.
/*
삼항 연산자
num > 10의 조건을 본다. = ?의미
맞으면 20 아니면 10 이란 의미
*/
num = (num > 10)?20:10;

질문 : 삼항연산자 써 본적이있는가
if else구문이 복잡해서 전에 일 하던 곳에서 삼항연산자로 
수정하는 작업이 많았습니다.